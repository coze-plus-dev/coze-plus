/*
 * Copyright 2025 coze-plus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"gorm.io/gorm"
)

const TableNameRole = "role"

// Role Role definition table
type Role struct {
	ID            int64          `gorm:"column:id;primaryKey;autoIncrement:true;comment:Role ID" json:"id"`                                                                           // Role ID
	RoleCode      string         `gorm:"column:role_code;not null;comment:Role code" json:"role_code"`                                                                                // Role code
	RoleName      string         `gorm:"column:role_name;not null;comment:Role name" json:"role_name"`                                                                                // Role name
	RoleDomain    string         `gorm:"column:role_domain;not null;default:global;comment:Permission domain: global-Global permissions, space-Space permissions" json:"role_domain"` // Permission domain: global-Global permissions, space-Space permissions
	SuperAdmin    int32          `gorm:"column:super_admin;not null;comment:Is super admin: 0-No, 1-Yes" json:"super_admin"`                                                          // Is super admin: 0-No, 1-Yes
	SpaceRoleType int32          `gorm:"column:space_role_type;comment:Space role type: 1-owner, 2-admin, 3-member (only valid when role_domain=space)" json:"space_role_type"`       // Space role type: 1-owner, 2-admin, 3-member (only valid when role_domain=space)
	IsBuiltin     int32          `gorm:"column:is_builtin;not null;comment:Is builtin role: 0-No, 1-Yes" json:"is_builtin"`                                                           // Is builtin role: 0-No, 1-Yes
	IsDisabled    int32          `gorm:"column:is_disabled;not null;comment:Is disabled: 0-Enabled, 1-Disabled" json:"is_disabled"`                                                   // Is disabled: 0-Enabled, 1-Disabled
	Permissions   string         `gorm:"column:permissions;comment:Permission matrix JSON configuration" json:"permissions"`                                                          // Permission matrix JSON configuration
	Description   string         `gorm:"column:description;comment:Role description" json:"description"`                                                                              // Role description
	CreatedBy     int64          `gorm:"column:created_by;not null;comment:Creator ID" json:"created_by"`                                                                             // Creator ID
	CreatedAt     int64          `gorm:"column:created_at;not null" json:"created_at"`
	UpdatedAt     int64          `gorm:"column:updated_at;not null" json:"updated_at"`
	DeletedAt     gorm.DeletedAt `gorm:"column:deleted_at;comment:Soft delete timestamp (NULL means not deleted)" json:"deleted_at"` // Soft delete timestamp (NULL means not deleted)
}

// TableName Role's table name
func (*Role) TableName() string {
	return TableNameRole
}
